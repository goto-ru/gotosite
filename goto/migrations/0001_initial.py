# -*- coding: utf-8 -*-
# Generated by Django 1.9.9 on 2016-08-13 20:36
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import filer.fields.image


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('filer', '0006_auto_20160623_1627'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=512)),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(0, 'Ожидает рассмотрения'), (1, 'Одобрена'), (2, 'Отклонена'), (3, 'Подтверждена'), (4, 'Не подтверждена')], default=0)),
                ('date_created', models.DateTimeField()),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='Arrangement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin_date', models.DateField(default=datetime.date.today)),
                ('end_date', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('short_description', models.CharField(blank=True, max_length=512)),
                ('full_description', models.TextField(blank=True)),
                ('price', models.CharField(blank=True, max_length=400)),
                ('target_auditory', models.CharField(blank=True, max_length=400)),
                ('format', models.CharField(blank=True, choices=[('school', 'Школа'), ('hackathon', 'Хакатон'), ('lecture', 'Лекция'), ('other', 'Другое')], max_length=400)),
                ('place', models.CharField(blank=True, max_length=400)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='Experting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(0, 'In discuss'), (1, 'Confirmed'), (2, 'Canceled')], default=0)),
                ('arrangement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='goto.Arrangement')),
            ],
        ),
        migrations.CreateModel(
            name='FAQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=512)),
                ('answer', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='GotoUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('N', "Can't say")], default='M', max_length=2)),
                ('surname', models.CharField(blank=True, max_length=40)),
                ('vk', models.URLField(blank=True, default='', max_length=240)),
                ('github', models.URLField(blank=True, default='', max_length=240)),
                ('about', models.TextField(blank=True)),
                ('profile_picture', models.ImageField(default='no-photo.jpg', upload_to='profile_pictures/')),
                ('organization', models.CharField(blank=True, max_length=240)),
                ('verified', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='MassMediaArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('description', models.CharField(max_length=256)),
                ('link', models.URLField()),
                ('image', models.ImageField(upload_to='mm-pictures')),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('slug', models.SlugField(max_length=256, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ParticipantComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True)),
                ('is_private', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('link', models.URLField()),
                ('image', models.ImageField(default='no-photo.jpg', upload_to='partners')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True)),
                ('link', models.URLField(blank=True)),
                ('arrangement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='goto.Arrangement')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True)),
                ('is_private', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about_us_partners', models.ManyToManyField(blank=True, related_name='about_us_partners', to='goto.Partner')),
                ('current_left_school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='settings_1', to='goto.Event')),
                ('current_right_school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='settings_2', to='goto.Event')),
                ('index_partners', models.ManyToManyField(blank=True, related_name='index_partners', to='goto.Partner')),
            ],
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, upload_to='solutions/')),
                ('participant_comment', models.CharField(blank=True, max_length=1000)),
                ('date_posted', models.DateTimeField()),
                ('date_verified', models.DateTimeField(blank=True, null=True)),
                ('score', models.FloatField(default=0)),
                ('expert_public_comment', models.CharField(blank=True, max_length=1000, null=True)),
                ('expert_private_comment', models.CharField(blank=True, max_length=1000, null=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='goto.Assignment')),
            ],
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Expert',
            fields=[
                ('gotouser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='goto.GotoUser')),
                ('short_description', models.CharField(blank=True, max_length=256)),
                ('position', models.CharField(blank=True, max_length=140, null=True)),
            ],
            options={
                'verbose_name_plural': 'Experts',
                'verbose_name': 'Expert',
                'permissions': (('view_personal_data', 'Can view personal data'), ('leave_private_comments', 'Can leave private comments'), ('view_private_comment', 'Can view private comments')),
            },
            bases=('goto.gotouser',),
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('gotouser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='goto.GotoUser')),
                ('graduation_year', models.IntegerField(blank=True, default=2016)),
                ('city', models.CharField(blank=True, default='Москва', max_length=40)),
                ('citizenship', models.CharField(blank=True, default='Российская Федерация', max_length=40)),
                ('birthday', models.DateField(default=datetime.date.today)),
                ('phone_number', models.CharField(blank=True, max_length=40)),
                ('parent_phone_number', models.CharField(blank=True, max_length=40)),
                ('health_issues', models.TextField(blank=True, default='Никаких')),
                ('_subscribed_to_email', models.BooleanField(default=False)),
                ('programming_languages', models.TextField(blank=True)),
                ('experience', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Participants',
                'verbose_name': 'Participant',
            },
            bases=('goto.gotouser',),
        ),
        migrations.AddField(
            model_name='projectcomment',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='left_project_comments', to='goto.GotoUser'),
        ),
        migrations.AddField(
            model_name='projectcomment',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='goto.Project'),
        ),
        migrations.AddField(
            model_name='participantcomment',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='left_participant_comments', to='goto.GotoUser'),
        ),
        migrations.AddField(
            model_name='gotouser',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='gotouser', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='faquestion',
            name='question_author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='goto.GotoUser'),
        ),
        migrations.AddField(
            model_name='event',
            name='applier_questions',
            field=models.ManyToManyField(blank=True, to='goto.Question'),
        ),
        migrations.AddField(
            model_name='event',
            name='faquestions',
            field=models.ManyToManyField(blank=True, to='goto.FAQuestion'),
        ),
        migrations.AddField(
            model_name='event',
            name='main_image',
            field=filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='filer.Image'),
        ),
        migrations.AddField(
            model_name='event',
            name='pages',
            field=models.ManyToManyField(blank=True, to='goto.Page'),
        ),
        migrations.AddField(
            model_name='event',
            name='partners',
            field=models.ManyToManyField(to='goto.Partner'),
        ),
        migrations.AddField(
            model_name='department',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='goto.Event'),
        ),
        migrations.AddField(
            model_name='department',
            name='image',
            field=filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='filer.Image'),
        ),
        migrations.AddField(
            model_name='arrangement',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arrangements', to='goto.Event'),
        ),
        migrations.AddField(
            model_name='application',
            name='arrangement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='goto.Arrangement'),
        ),
        migrations.AddField(
            model_name='application',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='goto.Department'),
        ),
        migrations.AddField(
            model_name='answer',
            name='application',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='goto.Application'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='goto.Question'),
        ),
        migrations.AddField(
            model_name='solution',
            name='expert',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='goto.Expert'),
        ),
        migrations.AddField(
            model_name='solution',
            name='participant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='goto.Participant'),
        ),
        migrations.AddField(
            model_name='settings',
            name='about_us_team',
            field=models.ManyToManyField(blank=True, to='goto.Expert'),
        ),
        migrations.AddField(
            model_name='project',
            name='maintainers',
            field=models.ManyToManyField(related_name='projects', to='goto.Participant'),
        ),
        migrations.AddField(
            model_name='project',
            name='supervisor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='goto.Expert'),
        ),
        migrations.AddField(
            model_name='participantcomment',
            name='participant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='goto.Participant'),
        ),
        migrations.AddField(
            model_name='experting',
            name='expert',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='goto.Expert'),
        ),
        migrations.AddField(
            model_name='arrangement',
            name='experts',
            field=models.ManyToManyField(through='goto.Experting', to='goto.Expert'),
        ),
        migrations.AddField(
            model_name='arrangement',
            name='participants',
            field=models.ManyToManyField(through='goto.Application', to='goto.Participant'),
        ),
        migrations.AddField(
            model_name='application',
            name='participant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='goto.Participant'),
        ),
    ]
